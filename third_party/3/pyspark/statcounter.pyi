# Stubs for pyspark.statcounter (Python 3.5)
#

from typing import Any, Dict, Iterable, Optional, Union

maximum = ...  # type: Any
minimum = ...  # type: Any
sqrt = ...  # type: Any

class StatCounter:
    n = ...  # type: int
    mu = ...  # type: float
    m2 = ...  # type: float
    maxValue = ...  # type: float
    minValue = ...  # type: float
    def __init__(self, values: Optional[Iterable[float]] = ...) -> None: ...
    def merge(self, value: float) -> "StatCounter": ...
    def mergeStats(self, other: "StatCounter") -> "StatCounter": ...
    def copy(self) -> "StatCounter": ...
    def count(self) -> int: ...
    def mean(self) -> float: ...
    def sum(self) -> float: ...
    def min(self) -> float: ...
    def max(self) -> float: ...
    def variance(self) -> float: ...
    def sampleVariance(self) -> float: ...
    def stdev(self) -> float: ...
    def sampleStdev(self) -> float: ...
    def asDict(self, sample: bool = ...) -> Dict[str, Union[float, int]]: ...
